
kind: Service
apiVersion: v1
metadata:
  name: acm-proxyserver
  namespace: multicloud-system
spec:
  selector:
    app: acm-proxyserver
  ports:
  - name: secure
    protocol: TCP
    port: 443
    targetPort: 6443

---

apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.proxy.open-cluster-management.io
spec:
  group: proxy.open-cluster-management.io
  version: v1beta1
  service:
    namespace: multicloud-system
    name: acm-proxyserver
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 10000
  versionPriority: 20

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: acm-proxyserver
  namespace: multicloud-system
  labels:
    app: acm-proxyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: acm-proxyserver
  template:
    metadata:
      labels:
        app: acm-proxyserver
    spec:
      containers:
      - name: acm-proxyserver
        image: github.com/open-cluster-management/multicloud-operators-foundation/cmd/acm-proxyserver
        imagePullPolicy: IfNotPresent
        args:
          - "/acm-proxyserver"
          - "--cert-dir=/tmp"
          - "--secure-port=6443"
          - "--klusterlet-cafile=/var/run/klusterlet/ca.crt"
          - "--klusterlet-certfile=/var/run/klusterlet/tls.crt"
          - "--klusterlet-keyfile=/var/run/klusterlet/tls.key"
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 6443
          initialDelaySeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 6443
          initialDelaySeconds: 2
        volumeMounts:
        - mountPath: /var/run/klusterlet
          name: klusterlet-certs
      volumes:
      - name: klusterlet-certs
        secret:
          defaultMode: 420
          secretName: acm-klusterlet-self-signed-secrets
