// Licensed Materials - Property of IBM
// (c) Copyright IBM Corporation 2018. All Rights Reserved.
// Note to U.S. Government Users Restricted Rights:
// Use, duplication or disclosure restricted by GSA ADP Schedule
// Contract with IBM Corp.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.open_cluster_management.multicloud_operators_foundation.pkg.apis.clusterregistry.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// AuthInfo holds information that describes how a client can get
// credentials to access the cluster. For example, OAuth2 client registration
// endpoints and supported flows, or Kerberos server locations.
message AuthInfo {
  // User references an object that contains implementation-specific details
  // about how a user should authenticate against this cluster.
  // +optional
  optional ObjectReference user = 1;

  // Controller references an object that contains implementation-specific
  // details about how a controller should authenticate. A simple use case for
  // this would be to reference a secret in another namespace that stores a
  // bearer token that can be used to authenticate against this cluster's API
  // server.
  optional ObjectReference controller = 2;
}

// Cluster contains information about a cluster in a cluster registry.
// +k8s:openapi-gen=x-kubernetes-print-columns:custom-columns=NAME:.metadata.name,CIDR:.spec.kubernetesApiEndpoints.serverEndpoints[].clientCIDR,SERVER:.spec.kubernetesApiEndpoints.serverEndpoints[].serverAddress,CREATION TIME:.metadata.creationTimestamp
// +resource:path=clusters
message Cluster {
  // Standard object's metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec is the specification of the cluster. This may or may not be
  // reconciled by an active controller.
  // +optional
  optional ClusterSpec spec = 2;

  // Status is the status of the cluster.
  // +optional
  optional ClusterStatus status = 3;
}

// ClusterCondition contains condition information for a cluster.
message ClusterCondition {
  // Type is the type of the cluster condition.
  optional string type = 1;

  // Status is the status of the condition. One of True, False, Unknown.
  optional string status = 2;

  // LastHeartbeatTime is the last time this condition was updated.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastHeartbeatTime = 3;

  // LastTransitionTime is the last time the condition changed from one status to another.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;

  // Reason is a (brief) reason for the condition's last status change.
  // +optional
  optional string reason = 5;

  // Message is a human-readable message indicating details about the last status change.
  // +optional
  optional string message = 6;
}

message ClusterList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Cluster items = 2;
}

// ClusterSpec contains the specification of a cluster.
message ClusterSpec {
  // KubernetesAPIEndpoints represents the endpoints of the API server for this
  // cluster.
  // +optional
  optional KubernetesAPIEndpoints kubernetesApiEndpoints = 1;

  // AuthInfo contains public information that can be used to authenticate
  // to and authorize with this cluster. It is not meant to store private
  // information (e.g., tokens or client certificates) and cluster registry
  // implementations are not expected to provide hardened storage for
  // secrets.
  // +optional
  optional AuthInfo authInfo = 2;
}

// ClusterStatus contains the status of a cluster.
message ClusterStatus {
  // Conditions contains the different condition statuses for this cluster.
  repeated ClusterCondition conditions = 1;
}

// KubernetesAPIEndpoints represents the endpoints for one and only one
// Kubernetes API server.
message KubernetesAPIEndpoints {
  // ServerEndpoints specifies the address(es) of the Kubernetes API serverâ€™s
  // network identity or identities.
  // +optional
  repeated ServerAddressByClientCIDR serverEndpoints = 1;

  // CABundle contains the certificate authority information.
  // +optional
  optional bytes caBundle = 2;
}

// ObjectReference contains enough information to let you inspect or modify the referred object.
message ObjectReference {
  // Kind contains the kind of the referent, e.g., Secret or ConfigMap
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  // +optional
  optional string kind = 1;

  // Name contains the name of the referent.
  // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  // +optional
  optional string name = 2;

  // Namespace contains the namespace of the referent.
  // More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  // +optional
  optional string namespace = 3;
}

// ServerAddressByClientCIDR helps clients determine the server address that
// they should use, depending on the ClientCIDR that they match.
message ServerAddressByClientCIDR {
  // The CIDR with which clients can match their IP to figure out if they should
  // use the corresponding server address.
  // +optional
  optional string clientCIDR = 1;

  // Address of this server, suitable for a client that matches the above CIDR.
  // This can be a hostname, hostname:port, IP or IP:port.
  // +optional
  optional string serverAddress = 2;
}

